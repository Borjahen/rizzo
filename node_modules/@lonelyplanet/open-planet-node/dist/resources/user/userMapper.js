"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var user_1 = require("../user");
var TYPES = require("../../types");
var mapper_1 = require("../../mapper");
var UserMapper = /** @class */ (function (_super) {
    __extends(UserMapper, _super);
    function UserMapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UserMapper.prototype.toModel = function (resource, included) {
        if (included === void 0) { included = []; }
        var model = new user_1.default();
        model.id = resource.id;
        model.website = resource.attributes.website;
        model.username = resource.attributes.username;
        model.name = resource.attributes.name;
        model.updatedAt = resource.attributes.updated_at;
        model.createdAt = resource.attributes.created_at;
        model.nextTrip = resource.attributes.next_trip;
        model.nationality = resource.attributes.nationality;
        model.lastTrip = resource.attributes.last_trip;
        model.lastName = resource.attributes.last_name;
        model.languages = resource.attributes.languages;
        model.gender = resource.attributes.gender;
        model.firstName = resource.attributes.first_name;
        model.emailVerified = resource.attributes.email_verified;
        model.avatar = resource.attributes.avatar;
        model.aboutMe = resource.attributes.about_me;
        model.email = resource.attributes.email;
        model.unconfirmedEmail = resource.attributes.unconfirmed_email;
        model.socialAccounts = included
            .filter(function (a) { return a.type === "social-account"; })
            .map(function (a) {
            var account = {
                id: a.id,
                name: a.attributes.social_network,
            };
            return account;
        });
        var currentLocation = included
            .find(function (a) { return a.type === "place"; });
        if (currentLocation && currentLocation.attributes) {
            model.currentLocation = {
                id: currentLocation.id,
                name: currentLocation.attributes.name,
                place_type: currentLocation.attributes.place_type,
            };
        }
        return model;
    };
    UserMapper.prototype.toResource = function (model) {
        var resource = {
            id: model.id,
            type: "user",
            attributes: {
                website: model.website,
                username: model.username,
                name: model.name,
                updated_at: model.updatedAt,
                created_at: model.createdAt,
                next_trip: model.nextTrip,
                nationality: model.nationality,
                last_trip: model.lastTrip,
                last_name: model.lastName,
                languages: model.languages,
                gender: model.gender,
                first_name: model.firstName,
                email_verified: model.emailVerified,
                avatar: model.avatar,
                about_me: model.aboutMe,
                email: model.email,
                unconfirmed_email: model.unconfirmedEmail,
                ask_me_about: model.aboutMe,
            },
        };
        return resource;
    };
    __decorate([
        inversify_1.inject(TYPES.User),
        __metadata("design:type", Object)
    ], UserMapper.prototype, "model", void 0);
    UserMapper = __decorate([
        inversify_1.injectable()
    ], UserMapper);
    return UserMapper;
}(mapper_1.default));
exports.UserMapper = UserMapper;
exports.default = UserMapper;
