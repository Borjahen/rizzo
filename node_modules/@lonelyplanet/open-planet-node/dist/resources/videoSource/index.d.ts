import { IJsonApiResponse, IJsonApiResource } from "../../interfaces";
export declare const videoSourceType = "source";
export interface IVideoSourceAttributes {
    modify_date?: string;
    create_date?: string;
    container?: string;
    codec?: string;
    src?: string;
    stream_name?: string;
    app_name?: string;
    width?: number;
    height?: number;
    encoding_rate?: number;
    size?: number;
    source_type?: string;
}
export interface IVideoSourceResource extends IJsonApiResource<IVideoSourceAttributes> {
}
export interface IVideoSourceResponse extends IJsonApiResponse<IVideoSourceResource> {
}
export interface IVideoSource<T = {}> {
    id?: string;
    updatedAt?: string;
    createdAt?: string;
    container?: string;
    codec?: string;
    src?: string;
    streamName?: string;
    appName?: string;
    width?: number;
    height?: number;
    encodingRate?: number;
    size?: number;
    sourceType?: string;
}
export default class VideoSource<T = {}> implements IVideoSource {
    id?: string;
    updatedAt?: string;
    createdAt?: string;
    container?: string;
    codec?: string;
    src?: string;
    streamName?: string;
    appName?: string;
    width?: number;
    height?: number;
    encodingRate?: number;
    size?: number;
    sourceType?: string;
    constructor(options?: IVideoSource);
}
