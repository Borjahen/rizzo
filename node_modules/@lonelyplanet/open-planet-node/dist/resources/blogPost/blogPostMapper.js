"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var blogPost_1 = require("../blogPost");
var TYPES = require("../../types");
var mapper_1 = require("../../mapper");
var BlogPostMapper = /** @class */ (function (_super) {
    __extends(BlogPostMapper, _super);
    function BlogPostMapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlogPostMapper.prototype.toModel = function (resource, included) {
        if (included === void 0) { included = []; }
        var model = new blogPost_1.default();
        model.id = resource.id;
        model.attribution = resource.attributes.attribution;
        model.publicationDate = new Date(resource.attributes.publication_date);
        model.excerpt = resource.attributes.excerpt;
        model.featuredImage = resource.attributes.featured_image;
        model.featuredProduct = resource.attributes.featured_product;
        model.content = resource.attributes.content[0].text;
        model.metadata = resource.attributes.seo_metadata;
        model.title = resource.attributes.title;
        var relationships = resource.relationships;
        if (relationships.categories) {
            var categories = relationships.categories.data;
            model.categories = categories.reduce(function (memo, c) {
                var category = included.find(function (i) { return i.type === blogPost_1.blogPostCategoryType && i.id === c.id; });
                if (category) {
                    memo.push({
                        id: category.id,
                        name: category.attributes.text,
                        slug: category.attributes.slug,
                    });
                }
                return memo;
            }, []);
        }
        return model;
    };
    BlogPostMapper.prototype.toResource = function (model) {
        var resource = {
            id: model.id,
            type: blogPost_1.blogPostType,
            attributes: {
                attribution: model.attribution,
                publication_date: model.publicationDate.toISOString(),
                excerpt: model.excerpt,
                featured_image: model.featuredImage,
                featured_product: model.featuredProduct,
                content: [{ text: model.content }],
                seo_metadata: model.metadata,
                title: model.title,
            },
        };
        return resource;
    };
    __decorate([
        inversify_1.inject(TYPES.User),
        __metadata("design:type", Object)
    ], BlogPostMapper.prototype, "model", void 0);
    BlogPostMapper = __decorate([
        inversify_1.injectable()
    ], BlogPostMapper);
    return BlogPostMapper;
}(mapper_1.default));
exports.BlogPostMapper = BlogPostMapper;
exports.default = BlogPostMapper;
