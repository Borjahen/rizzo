import Base from "../../base";
import { IBase, IResourceMapper, ISearchParams, IAutocompleteParams } from "../../interfaces";
import { ISearch, ISearchResource, ISearchResultsPayload } from "./";
import { IAutocompletePayload } from "./autocomplete";
export interface ISearchService extends IBase<ISearch> {
    query(options: ISearchParams): Promise<ISearchResultsPayload>;
    createClickthrough(term: string, searchResultId: string): Promise<void>;
    createAutocompleteClickthrough(prefix: string, searchResultSwiftypeId: string): Promise<void>;
    queryAutocomplete(options: ISearchParams): Promise<IAutocompletePayload>;
}
export default class SearchService extends Base<ISearch, ISearchResource> implements ISearchService {
    resource: string;
    mapper: IResourceMapper<ISearch, ISearchResource>;
    url(): string;
    query(options: ISearchParams): Promise<ISearchResultsPayload>;
    createClickthrough(term: any, searchResultId: any): Promise<void>;
    createAutocompleteClickthrough(prefix: any, searchResultSwiftypeId: any): Promise<void>;
    queryAutocomplete(options: IAutocompleteParams): Promise<IAutocompletePayload>;
}
