import BaseService from "../../service";
import { IService, IResourceMapper, IFindParams } from "../../interfaces";
import AssociationEntry, { IAssociationEntry, IAssociationEntryResource } from "./";
export interface IAssociationEntryService extends IService<IAssociationEntry> {
    bulkInsert(associationId: string, data: IAssociationEntry[]): Promise<AssociationEntry[]>;
    findByEntryId(associationId: string, entryId: string, options: IFindParams): Promise<AssociationEntry>;
    createAssociationEntry(associationId: string, entry: IAssociationEntry): Promise<AssociationEntry>;
    updateAssociationEntry(associationId: string, entry: IAssociationEntry): Promise<void>;
    deleteAssociationEntry(associationId: string, entryId: string): Promise<void>;
}
export default class AssociationEntryService extends BaseService<IAssociationEntry, IAssociationEntryResource> implements IAssociationEntryService {
    resource: string;
    mapper: IResourceMapper<IAssociationEntry, IAssociationEntryResource>;
    url(associationId: any): string;
    findByEntryId(associationId: string, entryId: string, options?: IFindParams): Promise<AssociationEntry<{}>>;
    createAssociationEntry(associationId: string, entry: IAssociationEntry): Promise<AssociationEntry<{}>>;
    updateAssociationEntry(associationId: string, entry: IAssociationEntry): Promise<void>;
    bulkInsert(associationId: string, data: IAssociationEntry[]): Promise<AssociationEntry<{}>[]>;
    deleteAssociationEntry(associationId: string, entryId: string): Promise<void>;
}
