"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var _1 = require("./");
var mapper_1 = require("../partnerActivity/mapper");
var mapper_2 = require("../lodging/mapper");
var mapper_3 = require("../poi/mapper");
var mapper_4 = require("../../mapper");
var mappers = {
    lodging: new mapper_2.default(),
    partner_activity: new mapper_1.default(),
    poi: new mapper_3.default(),
};
var BlacklistItemMapper = /** @class */ (function (_super) {
    __extends(BlacklistItemMapper, _super);
    function BlacklistItemMapper() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlacklistItemMapper.prototype.toModel = function (resource, included) {
        if (included === void 0) { included = []; }
        var model = new _1.default();
        var attrs = resource.attributes;
        model.id = resource.id;
        model.createdAt = attrs.created_at;
        model.updatedAt = attrs.updated_at;
        if (resource.relationships.target) {
            var targetResource = resource.relationships.target.data;
            model.target = this.mapIncluded(targetResource, included);
        }
        return model;
    };
    BlacklistItemMapper.prototype.toResource = function (model) {
        var resource = {
            id: model.id,
            type: _1.blacklistItemType,
            attributes: {
                created_at: model.createdAt,
                updated_at: model.updatedAt
            },
        };
        resource.relationships = {};
        if (model.target) {
            resource.relationships.target = {
                data: {
                    type: model.target.type,
                    id: model.target.id
                }
            };
        }
        Object.keys(resource.attributes).forEach(function (key) {
            if (typeof resource.attributes[key] === "undefined") {
                delete resource.attributes[key];
            }
        });
        if (Object.keys(resource.relationships).length === 0) {
            delete resource.relationships;
        }
        return resource;
    };
    BlacklistItemMapper.prototype.mapIncluded = function (resourceIdentifier, included) {
        var resource = included.find(function (i) {
            return i.type === resourceIdentifier.type && i.id === resourceIdentifier.id;
        });
        if (!resource) {
            return resourceIdentifier;
        }
        var mapper = mappers[resource.type];
        return mapper.toModel(resource, included);
    };
    BlacklistItemMapper = __decorate([
        inversify_1.injectable()
    ], BlacklistItemMapper);
    return BlacklistItemMapper;
}(mapper_4.default));
exports.BlacklistItemMapper = BlacklistItemMapper;
exports.default = BlacklistItemMapper;
