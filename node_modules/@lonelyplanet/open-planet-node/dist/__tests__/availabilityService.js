"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var service_1 = require("../resources/availability/service");
var mapper_1 = require("../resources/availability/mapper");
describe("AvailabilityService", function () {
    it("should check the availability of a given lodging based on dates ", function (done) {
        var fetchMock = jest.fn(function () { return new Promise((function (resolve) { return resolve({
            data: [{
                    attributes: {
                        title: "Poland",
                        offerings: [{
                                maxOccupancy: "1",
                                cost: {},
                                description: "desc",
                            }],
                    },
                    id: "1",
                    type: "availability",
                }],
        }); })); });
        var fakeId = "1";
        var fakeDates = {
            fromDate: "1-13-1986",
            toDate: "1-15-1986",
        };
        var service = new service_1.default("token123");
        service.mapper = new mapper_1.default();
        service.http = {
            fetch: fetchMock,
        };
        service.checkDates(fakeId, fakeDates)
            .then(function (payload) {
            expect(payload[0].id).toBe("1");
            expect(payload[0].type).toBe("availability");
            done();
        })
            .catch(function (e) { return console.error(e); });
        expect(fetchMock).toHaveBeenCalledWith("/lodgings/availability?filter[availability][available][from]=1-13-1986&filter[availability][available][to]=1-15-1986&filter[lodgings][equals]=1", { "headers": { "Authorization": "Bearer token123" } });
    });
});
