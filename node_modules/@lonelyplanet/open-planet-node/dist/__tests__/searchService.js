"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var service_1 = require("../resources/search/service");
var mapper_1 = require("../resources/search/mapper");
describe("SearchService", function () {
    it("should fetch search with the provided query", function (done) {
        var fetchMock = jest.fn(function () { return new Promise((function (resolve) { return resolve({
            data: [{
                    attributes: {
                        title: "Poland",
                    },
                    id: 1,
                    type: "search-result",
                }],
            meta: {
                total: 1,
                query: "Poland",
            }
        }); })); });
        var service = new service_1.default("access123");
        service.mapper = new mapper_1.default();
        service.http = {
            fetch: fetchMock,
        };
        return service.query({
            query: "Poland"
        })
            .then(function (payload) {
            expect(payload.data.length).toBe(1);
            expect(payload.total).toBe(1);
            expect(payload.meta.query).toBe("Poland");
            expect(payload.meta.total).toBe(1);
            done();
        })
            .then(function () {
            expect(fetchMock).toHaveBeenCalledWith("/search?filter[search-result][query][equals]=Poland", { "headers": { "Authorization": "Bearer access123" }, "query": "Poland" });
        })
            .catch(function (e) { return console.error(e); });
    });
    it("should fetch search with the provided query, id, and type", function () {
        var fetchMock = jest.fn(function () { return new Promise((function (resolve) { return resolve({
            data: [{
                    attributes: {
                        title: "Poland",
                    },
                    id: 1,
                    type: "search-result",
                }],
            meta: {
                total: 1,
                query: "Poland"
            }
        }); })); });
        var service = new service_1.default("access123");
        service.mapper = new mapper_1.default();
        service.http = {
            fetch: fetchMock,
        };
        return service.query({
            query: "Poland",
            "op-id": "360265",
            "op-type": "place",
        })
            .then(function () {
            expect(fetchMock).toHaveBeenCalledWith("/search?filter[search-result][query][equals]=Poland&filter[search-result][op-id][equals]=360265&filter[search-result][op-type][equals]=place", { "headers": { "Authorization": "Bearer access123" }, "query": "Poland", "op-id": "360265", "op-type": "place" });
        })
            .catch(function (e) { return console.error(e); });
    });
    it("should post clickthrough with given term & id", function () {
        var fetchMock = jest.fn(function () { return new Promise((function (resolve) { return resolve({
            data: { message: "Clickthrough registered." }
        }); })); });
        var service = new service_1.default("access123");
        service.http = {
            fetch: fetchMock,
        };
        return service.createClickthrough("Gatsby", "c41e0fde-5e64-11e8-b625-2fe248649608").then(function () {
            expect(fetchMock).toHaveBeenCalledWith("/search/clickthroughs", {
                "body": {
                    "data": {
                        "type": "search-clickthrough",
                        "attributes": {
                            "term": "Gatsby",
                            "id": "c41e0fde-5e64-11e8-b625-2fe248649608"
                        }
                    }
                },
                "headers": {
                    "Authorization": "Bearer access123"
                },
                "method": "POST"
            });
        });
    });
    it("should post autocomplete clickthrough with given prefix & swiftype id", function () {
        var fetchMock = jest.fn(function () { return new Promise((function (resolve) { return resolve({
            data: { message: "Clickthrough registered." }
        }); })); });
        var service = new service_1.default("access123");
        service.http = {
            fetch: fetchMock,
        };
        return service.createAutocompleteClickthrough("Gats", "5b3a84760cc37f95de30e254").then(function () {
            expect(fetchMock).toHaveBeenCalledWith("/search/autocomplete/clickthroughs", {
                "body": {
                    "data": {
                        "type": "autocomplete-clickthrough",
                        "attributes": {
                            "prefix": "Gats",
                            "id": "5b3a84760cc37f95de30e254"
                        }
                    }
                },
                "headers": {
                    "Authorization": "Bearer access123"
                },
                "method": "POST"
            });
        });
    });
    it("should fetch autocomplete with the provided query", function (done) {
        var fetchMock = jest.fn().mockImplementation(function () { return Promise.resolve({
            data: [{
                    attributes: {
                        title: "Poland",
                    },
                    id: 1,
                    type: "search-result",
                }],
            meta: {
                total: 1,
                query: "Poland",
            }
        }); });
        var service = new service_1.default("access123");
        service.mapper = new mapper_1.default();
        service.http = {
            fetch: fetchMock,
        };
        return service.queryAutocomplete({
            query: "Poland",
            limit: 20
        })
            .then(function (payload) {
            expect(payload.data.length).toBe(1);
            expect(payload.meta.query).toBe("Poland");
            expect(payload.meta.total).toBe(1);
            done();
        })
            .then(function () {
            expect(fetchMock).toHaveBeenCalledWith("/search/autocomplete?filter[search-result][query][equals]=Poland&page[limit]=20", { "headers": { "Authorization": "Bearer access123" }, "query": "Poland", "limit": 20 });
        })
            .catch(function (e) { return console.error(e); });
    });
});
