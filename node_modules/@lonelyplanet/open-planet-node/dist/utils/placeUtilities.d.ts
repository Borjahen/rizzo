import { IJsonApiRelationship, IJsonApiResource } from "../interfaces";
import { IPlaceResource } from "../resources/place";
import Lodging from "../resources/lodging";
import Poi from "../resources/poi";
export declare function assignContainingPlaces(included: IJsonApiResource[], ancestry: IPlaceResource[], model: Lodging | Poi): void;
export declare const assignRegions: (included: IJsonApiResource<{
    [key: string]: any;
}, {
    [key: string]: IJsonApiRelationship;
}>[], ancestry: IPlaceResource[], place: IPlaceResource, model: Poi | Lodging) => void;
export declare const assignCity: (included: IJsonApiResource<{
    [key: string]: any;
}, {
    [key: string]: IJsonApiRelationship;
}>[], ancestry: IPlaceResource[], place: IPlaceResource, model: Poi | Lodging) => void;
export declare const assignContinent: (included: IJsonApiResource<{
    [key: string]: any;
}, {
    [key: string]: IJsonApiRelationship;
}>[], ancestry: IPlaceResource[], place: IPlaceResource, model: Poi | Lodging) => void;
export declare const assignCountry: (included: IJsonApiResource<{
    [key: string]: any;
}, {
    [key: string]: IJsonApiRelationship;
}>[], ancestry: IPlaceResource[], place: IPlaceResource, model: Poi | Lodging) => void;
export declare const assignNeighborhood: (included: IJsonApiResource<{
    [key: string]: any;
}, {
    [key: string]: IJsonApiRelationship;
}>[], ancestry: IPlaceResource[], place: IPlaceResource, model: Poi | Lodging) => void;
