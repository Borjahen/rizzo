import { IResourceMapper, IHttpClient, IFindParams, ISearchParams, IJsonApiResponse, IJsonApiResource, IAvailabilityParams } from "./interfaces";
export default abstract class Base<T, R extends IJsonApiResource> {
    accessToken?: string;
    resource: string;
    mapper: IResourceMapper<T, R>;
    http: IHttpClient;
    protected host: string;
    constructor(accessToken: any);
    abstract url(options?: {
        [key: string]: any;
    }): string;
    parse(response: IJsonApiResponse<R>, mapper?: IResourceMapper<T, R>): T | T[];
    qs(options?: (IFindParams | ISearchParams | IAvailabilityParams)): string;
    headers(): Object;
}
