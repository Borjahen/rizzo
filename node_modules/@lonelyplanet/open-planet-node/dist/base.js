"use strict";
var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
Object.defineProperty(exports, "__esModule", { value: true });
var inversify_1 = require("inversify");
var TYPES = require("./types");
var jsonApiUtils_1 = require("./jsonApiUtils");
var Base = /** @class */ (function () {
    function Base(accessToken) {
        this.host = "";
        this.accessToken = accessToken;
    }
    Base.prototype.parse = function (response, mapper) {
        if (mapper === void 0) { mapper = this.mapper; }
        return mapper.map(response);
    };
    Base.prototype.qs = function (options) {
        if (options === void 0) { options = {}; }
        var filters = jsonApiUtils_1.createFilters(__assign({ resource: options.resource || this.resource }, options));
        var include = jsonApiUtils_1.createIncludes(options.include);
        var items = [filters, include].filter(function (i) { return i; });
        return items.length ? "?" + items.join("&") : "";
    };
    Base.prototype.headers = function () {
        return this.accessToken ?
            { Authorization: "Bearer " + this.accessToken } :
            {};
    };
    __decorate([
        inversify_1.inject(TYPES.HttpClient),
        __metadata("design:type", Object)
    ], Base.prototype, "http", void 0);
    __decorate([
        inversify_1.inject(TYPES.OpenPlanetHost),
        __metadata("design:type", Object)
    ], Base.prototype, "host", void 0);
    Base = __decorate([
        inversify_1.injectable(),
        __metadata("design:paramtypes", [Object])
    ], Base);
    return Base;
}());
exports.default = Base;
