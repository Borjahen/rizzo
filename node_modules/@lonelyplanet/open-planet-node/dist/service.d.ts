import Base from "./base";
import { IFindParams, IJsonApiResource } from "./interfaces";
export default abstract class BaseService<T, R extends IJsonApiResource> extends Base<T, R> {
    constructor(accessToken: any);
    find(options?: IFindParams): Promise<T[]>;
    update(attributes: T): Promise<T | T[]>;
    create(attributes: T): Promise<T>;
    findById(id: string | string[], options?: IFindParams): Promise<T | T[]>;
    destroy(id: string, options?: IFindParams): Promise<void>;
}
