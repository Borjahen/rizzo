import { inject, injectable } from "inversify";
import BaseService from "../../service";
import { IHttpClient, IService, IResourceMapper, IOpenIdUserInfoResponse, IFindParams } from "../../interfaces";
import Image, { IImage, IImageResource, imageType } from "./";
import Mapper from "./mapper";
import * as TYPES from "../../types";

export interface IImageService extends IService<IImage> {
  findImage(options: {
    id: string,
    number: string,
  }): Promise<IImage>;
}

@injectable()
export default class ImagesService extends BaseService<IImage, IImageResource> implements IImageService {
  resource: string = imageType;

  public url() {
    return `${this.host}/images`;
  }

  public findImage({
    id, number,
  }: {
    id: string,
    number: string,
  }) {
    return Promise.resolve(new Image());
  }
}
