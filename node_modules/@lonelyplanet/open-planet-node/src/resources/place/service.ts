import { inject, injectable } from "inversify";
import BaseService from "../../service";
import { IHttpClient, IService, IResourceMapper, IOpenIdUserInfoResponse, IFindParams } from "../../interfaces";
import Place, { IPlace, IPlaceResource, IPlaceResponse, placeType } from "./";
import Mapper from "./mapper";
import * as TYPES from "../../types";

export interface IPlaceService extends IService<IPlace> {}

@injectable()
export default class PoiService extends BaseService<IPlace, IPlaceResource> implements IPlaceService {
  resource: string = placeType;
  mapper: IResourceMapper<IPlace, IPlaceResource> = new Mapper();

  public url() {
    return `${this.host}/places`;
  }
}
