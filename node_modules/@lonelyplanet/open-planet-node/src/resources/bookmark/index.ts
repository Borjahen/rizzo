import { injectable } from "inversify";
import {
  IJsonApiResponse,
  IJsonApiResource,
  IJsonApiRelationship,
} from "../../interfaces";

export const bookmarkEntryType = "bookmark-entry";

export interface IBookmarkEntryAttributes {
  checked?: boolean;
  created_at?: string;
  note?: string;
  order_number?: number;
}

export interface IBookmarkEntryResource extends IJsonApiResource<IBookmarkEntryAttributes> {}
export interface IBookmarkEntryResponse extends IJsonApiResponse<IBookmarkEntryResource> {}

export interface IBookmark<T = {}> {
  id?: string;
  checked?: boolean;
  order?: number;
  createdAt?: Date;
  target?: T & { id?: string; type?: string; };
  note?: string;
}

@injectable()
export default class Bookmark<T = {}> implements IBookmark {
  id?: string;
  checked?: boolean;
  order?: number;
  createdAt?: Date;
  target?: { id?: string; type?: string; };
  note?: string;

  constructor(options?: IBookmark) {
    Object.assign(this, options);
  }
}
