import { inject, injectable } from "inversify";
import BaseService from "../../service";
import { IHttpClient, IService, IResourceMapper, IOpenIdUserInfoResponse, IFindParams } from "../../interfaces";
import Poi, { ILodging, ILodgingResource, ILodgingResponse, lodgingType } from "./";
import Mapper from "./mapper";
import * as TYPES from "../../types";

export interface ILodgingService extends IService<ILodging> {}

@injectable()
export default class LodgingService extends BaseService<ILodging, ILodgingResource> implements ILodgingService {
  resource: string = lodgingType;
  mapper: IResourceMapper<ILodging, ILodgingResource> = new Mapper();

  public url() {
    return `${this.host}/lodgings`;
  }
}
