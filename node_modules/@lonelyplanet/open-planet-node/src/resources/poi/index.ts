import { injectable } from "inversify";
import {
  IJsonApiResponse,
  IJsonApiResource,
  priceRange
} from "../../interfaces";
import { IImage } from "../image";
import { IPlace } from "../place";

export const poiType = "poi";

export type poiTypes =
  | "sights"
  | "eating"
  | "shopping"
  | "drinking_nightlife"
  | "entertainment"
  | "transport"
  | "info"
  | "festivals_events"
  | "sleeping";

export interface IPoiAttributes {
  address?: {
    extras?: string;
    street?: string;
  };
  emails?: string[];
  hours_string?: string;
  location?: {
    coordinates: number[];
    type: "Point";
  };
  name?: string;
  alternative_names?: string[];
  poi_attributes?: {
    category: string;
    name: string;
  }[];
  poi_type?: poiTypes;
  price_range?: priceRange;
  price_string?: string;
  published_at?: string;
  review?: {
    essential?: string;
    extension?: string;
  };
  rich_hours_string?: string;
  score?: number;
  searchable_name?: string;
  subtypes?: string[];
  telephone?: {
    callingCode?: string;
    national?: string;
    numbers?: string[];
  };
  telephone_info?: { number: number }[];
  website?: string;
}

export interface IPoiResource extends IJsonApiResource<IPoiAttributes> {}
export interface IPoiResponse extends IJsonApiResponse<IPoiResource> {}

export interface IPoi {
  id?: string;
  address?: {
    extras?: string;
    street?: string;
  };
  emails?: string[];
  hours?: string;
  location?: {
    coordinates: number[];
    type: "Point";
  };
  name?: string;
  alternative_names?: string[];
  poiAttributes?: {
    category: string;
    name: string;
  }[];
  poiType?: poiTypes;
  price?: string;
  priceRange?: priceRange;
  publishedAt?: string;
  review?: {
    essential?: string;
    extension?: string;
  };
  richHoursString?: string;
  lpInternalScore?: number;
  searchableName?: string;
  subtypes?: string[];
  telephone?: {
    callingCode?: string;
    national?: string;
    numbers?: string[];
  };
  telephoneInfo?: { number: number }[];
  website?: string;
  containingPlaces?: IPlace[];
  containingPlaceId?: string;
  containingPlaceName?: string;
  containingCityId?: string;
  containingCityName?: string;
  containingContinentId?: string;
  containingContinentName?: string;
  containingCountryName?: string;
  containingNeighborhoodId?: string;
  containingNeighborhoodName?: string;
  containingRegionNames?: string[];
  type?: string;
  images?: IImage[];
}

@injectable()
export default class Poi implements IPoi {
  id?: string;
  address?: {
    extras?: string;
    street?: string;
  };
  emails?: string[];
  hours?: string;
  location?: {
    coordinates: number[];
    type: "Point";
  };
  name?: string;
  alternative_names?: string[];
  poiAttributes?: {
    category: string;
    name: string;
  }[];
  poiType?: poiTypes;
  price?: string;
  priceRange?: priceRange;
  publishedAt?: string;
  review?: {
    essential?: string;
    extension?: string;
  };
  richHoursString?: string;
  lpInternalScore?: number;
  searchableName?: string;
  subtypes?: string[];
  telephone?: {
    callingCode?: string;
    national?: string;
    numbers?: string[];
  };
  telephoneInfo?: { number: number }[];
  website?: string;
  containingPlaces?: IPlace[];
  containingPlaceId?: string;
  containingPlaceName?: string;
  containingCityId?: string;
  containingCityName?: string;
  containingContinentId?: string;
  containingContinentName?: string;
  containingCountryName?: string;
  containingNeighborhoodId?: string;
  containingNeighborhoodName?: string;
  containingRegionNames?: string[];
  type?: string = "poi";
  images?: IImage[] = [];

  constructor(options?: IPoi) {
    Object.assign(this, options);
  }
}
