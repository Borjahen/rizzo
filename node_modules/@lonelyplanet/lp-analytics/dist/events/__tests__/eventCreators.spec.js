"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var analytics = __importStar(require("../constants"));
var enums_1 = require("../enums");
var eventCreators_1 = require("../eventCreators");
describe("createPromotionClickEvent function", function () {
    it("should create a properly formed event", function () {
        var _a, _b, _c;
        var testPromotion = {
            creative: "fairly",
            id: "123456",
            name: "Phillip",
            position: "director of finance",
        };
        var created = eventCreators_1.createPromotionClickEvent(testPromotion);
        var expected = (_a = {},
            _a[analytics.eventName] = enums_1.EventNames.promotionClick,
            _a[analytics.ecommerce] = (_b = {},
                _b[analytics.promoClick] = (_c = {},
                    _c[analytics.promotions] = [
                        __assign({}, testPromotion),
                    ],
                    _c),
                _b),
            _a);
        expect(expected).toEqual(created);
    });
});
describe("createPromotionImpressionEvent function", function () {
    it("should create a properly formed event", function () {
        var _a, _b, _c;
        var testPromotionOne = {
            creative: "fairly",
            id: "123456",
            name: "Phillip",
            position: "director of finance",
        };
        var testPromotionTwo = {
            creative: "very much so",
            id: "789",
            name: "Phillis",
            position: "director of director of finance",
        };
        var created = eventCreators_1.createPromotionImpressionEvent([testPromotionOne, testPromotionTwo]);
        var expected = (_a = {},
            _a[analytics.eventName] = enums_1.EventNames.promotionImpression,
            _a[analytics.ecommerce] = (_b = {},
                _b[analytics.promoView] = (_c = {},
                    _c[analytics.promotions] = [
                        __assign({}, testPromotionOne),
                        __assign({}, testPromotionTwo),
                    ],
                    _c),
                _b),
            _a);
        expect(expected).toEqual(created);
    });
});
