"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var dataLayer_1 = require("../../../dataLayer");
var events_1 = require("../../../events");
var writeAuthDataToDataLayerInitPayload_1 = require("../writeAuthDataToDataLayerInitPayload");
var GLOBAL_UI_INITIAL_PROPS = {
    auth: {
        isUserSignedIn: true,
        user: {
            avatar: "//assets.staticlp.com/profiles/users/placeholders/small.png",
            email: "testUser@notreal.fake",
            facebookUid: null,
            id: "c21a9bab-cd6c-4457-aacd-e16d394058bd",
            timestamp: "2018-10-25T19:19:10.756Z",
            username: "anAdmirableOnlineDenizen",
            variant: "_split-16-connect",
        }
    }
};
describe("writeAuthDataToDataLayerInitPayload", function () {
    beforeEach(function () {
        delete window.lp;
        delete window.GLOBAL_UI_INITIAL_PROPS;
    });
    it("should noop if there's nothing in the dataLayer, even if there are global_ui props that could be used", function () {
        var dataLayer = dataLayer_1.getDataLayer();
        Object.assign(window, { GLOBAL_UI_INITIAL_PROPS: GLOBAL_UI_INITIAL_PROPS });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var theSameAsBefore = dataLayer_1.getDataLayer();
        expect(dataLayer).toEqual(theSameAsBefore);
    });
    it("should noop if there's a dataLayer-init payload in the dataLayer, but no global_ui props", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _a));
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var theSameAsBefore = dataLayer_1.getDataLayer();
        expect(dataLayer).toEqual(theSameAsBefore);
    });
    it("should write 'userId', 'dispatchVariant', and 'variant' to the dataLayer-init\n      payload when the required data is present as global_ui props", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _a));
        Object.assign(window, { GLOBAL_UI_INITIAL_PROPS: GLOBAL_UI_INITIAL_PROPS });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var dataLayerInitPayload = dataLayer[0];
        var _b = dataLayerInitPayload, _c = events_1.analytics.dispatchVariant, dispatchVariant = _b[_c], _d = events_1.analytics.userId, userId = _b[_d], _e = events_1.analytics.loggedIn, loggedIn = _b[_e];
        expect(dispatchVariant).toBe("_split-16-connect");
        expect(userId).toBe("c21a9bab-cd6c-4457-aacd-e16d394058bd");
        expect(loggedIn).toBe(true);
    });
    it("shouldn't do any of that if event(s) in the dataLayer aren't of event type \"dataLayer-initialized\"", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = "some-other-event", _a));
        Object.assign(window, { GLOBAL_UI_INITIAL_PROPS: GLOBAL_UI_INITIAL_PROPS });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var someOtherEvent = dataLayer[0];
        var _b = someOtherEvent, _c = events_1.analytics.dispatchVariant, dispatchVariant = _b[_c], _d = events_1.analytics.userId, userId = _b[_d], _e = events_1.analytics.loggedIn, loggedIn = _b[_e];
        expect(dispatchVariant).toBeUndefined();
        expect(userId).toBeUndefined();
        expect(loggedIn).toBeUndefined();
    });
    it("should find the dataLayer-initialized payload no matter what index it is", function () {
        var _a, _b, _c, _d;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = "legacy-payload", _a));
        dataLayer.push((_b = {}, _b[events_1.analytics.eventName] = "more-legacy-payload", _b));
        dataLayer.push((_c = {}, _c[events_1.analytics.eventName] = "ancestral-payload", _c));
        dataLayer.push((_d = {}, _d[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _d));
        Object.assign(window, { GLOBAL_UI_INITIAL_PROPS: GLOBAL_UI_INITIAL_PROPS });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var legacyPayload = dataLayer[0], moreLegacyPayload = dataLayer[1], ancestralPayload = dataLayer[2], dataLayerInitPayload = dataLayer[3];
        var _e = dataLayerInitPayload, _f = events_1.analytics.dispatchVariant, dispatchVariant = _e[_f], _g = events_1.analytics.userId, userId = _e[_g], _h = events_1.analytics.loggedIn, loggedIn = _e[_h];
        expect(dispatchVariant).toBe("_split-16-connect");
        expect(userId).toBe("c21a9bab-cd6c-4457-aacd-e16d394058bd");
        expect(loggedIn).toBe(true);
    });
    it("should be able to handle unexpected global_ui payload shapes", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _a));
        Object.assign(window, {
            GLOBAL_UI_INITIAL_PROPS: {
                auth: {
                    isUserSignedIn: "afaik",
                    user: null
                }
            }
        });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var dataLayerInitPayload = dataLayer[0];
        var _b = dataLayerInitPayload, _c = events_1.analytics.dispatchVariant, dispatchVariant = _b[_c], _d = events_1.analytics.userId, userId = _b[_d], _e = events_1.analytics.loggedIn, loggedIn = _b[_e];
        expect(dispatchVariant).toBeUndefined();
        expect(userId).toBeUndefined();
        expect(loggedIn).toBe("afaik");
    });
    it("should be able to handle more unexpected global_ui payload shapes", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _a));
        Object.assign(window, {
            GLOBAL_UI_INITIAL_PROPS: { auth: null },
        });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var dataLayerInitPayload = dataLayer[0];
        var _b = dataLayerInitPayload, _c = events_1.analytics.dispatchVariant, dispatchVariant = _b[_c], _d = events_1.analytics.userId, userId = _b[_d], _e = events_1.analytics.loggedIn, loggedIn = _b[_e];
        expect(dispatchVariant).toBeUndefined();
        expect(userId).toBeUndefined();
        expect(loggedIn).toBeUndefined();
    });
    it("must hold fast even when confronted by startlingly unexpected global_ui payload shapes", function () {
        var _a;
        var dataLayer = dataLayer_1.getDataLayer();
        dataLayer.push((_a = {}, _a[events_1.analytics.eventName] = events_1.EventNames.dataLayerInit, _a));
        Object.assign(window, {
            GLOBAL_UI_INITIAL_PROPS: null,
        });
        writeAuthDataToDataLayerInitPayload_1.writeAuthDataToDataLayerInitPayload();
        var dataLayerInitPayload = dataLayer[0];
        var _b = dataLayerInitPayload, _c = events_1.analytics.dispatchVariant, dispatchVariant = _b[_c], _d = events_1.analytics.userId, userId = _b[_d], _e = events_1.analytics.loggedIn, loggedIn = _b[_e];
        expect(dispatchVariant).toBeUndefined();
        expect(userId).toBeUndefined();
        expect(loggedIn).toBeUndefined();
    });
});
