"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var config_json_1 = __importDefault(require("../../config.json"));
var constants_1 = require("../../events/constants");
var dataLayer_1 = require("../../dataLayer");
var globalPropsScopeName = config_json_1.default.globalPropsScopeName;
exports.writeAuthDataToDataLayerInitPayload = function () {
    /**
     * Will take "dispatchVariant", "loggedIn", and "userId" from
     * the authentication payload that may be present in GLOBAL_UI_INITIAL_PROPS
     * and include it in the dataLayer-initialized payload prior to running the gtm
     * container initialization snippet.
     * Will noop if that data isn't present.
     * This is the same thing that's happening with scripts generated by "dataLayerScript" in
     * <DataLayerInitializationData>.
     */
    var dataLayer = dataLayer_1.getDataLayer();
    var _a = globalPropsScopeName, globalProps = window[_a];
    var dataLayerInitPayload = dataLayer.filter(function (event) {
        return event[constants_1.eventName] === constants_1.dataLayerInitEventName;
    })[0];
    if (dataLayerInitPayload && globalProps) {
        var _b = globalProps.auth, auth = _b === void 0 ? {} : _b;
        var _c = (auth || {}), isUserSignedIn = _c.isUserSignedIn, _d = _c.user, user = _d === void 0 ? {} : _d;
        var _e = (user || {}), id = _e.id, variant = _e.variant;
        dataLayerInitPayload[constants_1.dispatchVariant] = variant;
        dataLayerInitPayload[constants_1.loggedIn] = isUserSignedIn;
        dataLayerInitPayload[constants_1.userId] = id;
    }
};
