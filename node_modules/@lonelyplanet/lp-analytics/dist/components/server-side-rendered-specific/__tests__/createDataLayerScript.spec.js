"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var config_json_1 = __importDefault(require("../../../config.json"));
var dataLayer_1 = require("../../../dataLayer");
var createDataLayerScript_1 = require("../createDataLayerScript");
var GLOBAL_UI_INITIAL_PROPS = {
    auth: {
        isUserSignedIn: true,
        user: {
            avatar: "//assets.staticlp.com/profiles/users/placeholders/small.png",
            email: "testUser@notreal.fake",
            facebookUid: null,
            id: "c21a9bab-cd6c-4457-aacd-e16d394058bd",
            timestamp: "2018-10-25T19:19:10.756Z",
            username: "anAdmirableOnlineDenizen",
            variant: "_split-16-connect",
        }
    }
};
describe("<DataLayerInitializationData />", function () {
    beforeEach(function () {
        delete window.lp;
        delete window.GLOBAL_UI_INITIAL_PROPS;
    });
    it("should create an initial data layer script that creates a complete initialization event", function () {
        var someTestInitializationData = {
            articleTemplate: "polemic",
            atlasId: 8675309,
            hasPhoto: true,
        };
        var script = createDataLayerScript_1.createDataLayerScript(someTestInitializationData);
        eval(script); // tslint:disable-line:no-eval
        var analyticsPath = config_json_1.default.analyticsPath;
        expect(dataLayer_1.getAnalyticsObject(analyticsPath).dataLayer).toEqual([
            __assign({}, createDataLayerScript_1.emptyDataLayerInitializationEvent, someTestInitializationData),
        ]);
    });
    it("should add authentication details from global-ui components, if present.", function () {
        window.GLOBAL_UI_INITIAL_PROPS = GLOBAL_UI_INITIAL_PROPS;
        var script = createDataLayerScript_1.createDataLayerScript();
        eval(script); // tslint:disable-line:no-eval
        var analyticsPath = config_json_1.default.analyticsPath;
        var firstEvent = dataLayer_1.getAnalyticsObject(analyticsPath).dataLayer[0];
        var initializationEvent = firstEvent;
        expect(initializationEvent.loggedIn).toBe(true);
        expect(initializationEvent.userId).toBe("c21a9bab-cd6c-4457-aacd-e16d394058bd");
        expect(initializationEvent.dispatchVariant).toBe("_split-16-connect");
    });
    it("should push to some index other than 0 if so instructed via argument", function () {
        var script = createDataLayerScript_1.createDataLayerScript({}, 1);
        eval(script); // tslint:disable-line:no-eval
        var analyticsPath = config_json_1.default.analyticsPath;
        var _a = dataLayer_1.getAnalyticsObject(analyticsPath).dataLayer, firstItem = _a[0], secondItem = _a[1];
        expect(firstItem).toBe(undefined);
        expect(secondItem).toEqual(createDataLayerScript_1.emptyDataLayerInitializationEvent);
    });
    test("the generated script should ensure that window.dataLayer " +
        "references the same dataLayer specified in config.json", function () {
        var script = createDataLayerScript_1.createDataLayerScript({});
        eval(script); // tslint:disable-line:no-eval
        var analyticsPath = config_json_1.default.analyticsPath;
        expect(window.dataLayer).toBe(dataLayer_1.getAnalyticsObject(analyticsPath).dataLayer);
    });
    test("the generated script should ensure that window.dataLayer " +
        "references the same dataLayer specified in config.json", function () {
        var script = createDataLayerScript_1.createDataLayerScript({});
        eval(script); // tslint:disable-line:no-eval
        var analyticsPath = config_json_1.default.analyticsPath;
        expect(window.dataLayer).toBe(dataLayer_1.getAnalyticsObject(analyticsPath).dataLayer);
    });
});
