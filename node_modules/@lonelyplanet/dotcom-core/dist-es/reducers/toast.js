var __assign = (this && this.__assign) || Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
            t[p] = s[p];
    }
    return t;
};
var _a;
import { handleActions } from "redux-actions";
import { TOAST_HIDE, TOAST_SHOW } from "../constants/toast";
var toast = handleActions((_a = {},
    _a[TOAST_SHOW] = function (state, action) { return (__assign({}, state, action.payload, { visible: true })); },
    _a[TOAST_HIDE] = function (state) { return (__assign({}, state, { visible: false })); },
    _a), {
    buttonLabel: "",
    message: "",
    type: "success",
    url: "",
    visible: false,
});
export default toast;
