"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var catchAll_1 = require("../../middleware/catchAll");
describe("catchAll", function () {
    var statusMock;
    var requestMock;
    var responseMock;
    var nextMock;
    beforeEach(function () {
        statusMock = jest.fn();
        requestMock = jest.fn();
        responseMock = {
            status: statusMock
        };
        nextMock = jest.fn();
    });
    afterEach(function () {
        requestMock.mockReset();
        statusMock.mockReset();
        nextMock.mockReset();
    });
    it("should call next if headers are already sent", function () {
        catchAll_1.default(requestMock, responseMock, nextMock);
        expect(statusMock).toHaveBeenCalledWith(404);
        expect(nextMock).toHaveBeenCalledTimes(1);
        expect(nextMock.mock.calls[0][0].status).toBe(404);
    });
});
