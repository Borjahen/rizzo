"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var promBundleMock = jest.fn();
var setDefaultLabelsMock = jest.fn();
var collectDefaultMetricsMock = jest.fn();
jest.mock("express-prom-bundle", function () { return promBundleMock; });
var promBundle = require("express-prom-bundle");
promBundle.promClient = {
    register: {
        setDefaultLabels: setDefaultLabelsMock,
    },
    collectDefaultMetrics: collectDefaultMetricsMock,
};
var prometheus_1 = require("../../middleware/prometheus");
describe("prometheusMiddleware", function () {
    describe("customNormalize", function () {
        it("should return the name of the first matching route", function () {
            var url = "usa/nashville/restaurants/bastion/a/poi-eat/1534928/362228";
            var routes = [
                { route: "(.*)/news/:date/:slug", name: "News#show" },
                { route: "(.*)/a/:type-:kind/:id/:placeId", name: "Poi#show" },
            ];
            var path = prometheus_1.customNormalize(url, routes);
            expect(path).toBe("Poi#show");
        });
    });
    it("should return the provided default path if the url doesn't match a route", function () {
        var defaultPath = "news/";
        var url = "usa/nashville/restaurants/bastion/a/poi-eat/1534928/362228";
        var routes = [
            { route: "(.*)/news/:date/:slug", name: "News#show" },
        ];
        var path = prometheus_1.customNormalize(url, routes, { defaultPath: defaultPath });
        expect(path).toBe(defaultPath);
    });
    it("should return the provided url if the url doesn't match a route", function () {
        var defaultPath = "news/";
        var url = "usa/nashville/restaurants/bastion/a/poi-eat/1534928/362228";
        var routes = [
            { route: "(.*)/news/:date/:slug", name: "News#show" },
        ];
        var path = prometheus_1.customNormalize(url, routes, {});
        expect(path).toBe(url);
    });
    describe("createPrometheusMiddleware", function () {
        it("should return the name of the first matching route", function () {
            var url = "usa/nashville/restaurants/bastion/a/poi-eat/1534928/362228";
            var routes = [
                { route: "(.*)/a/:type-:kind/:id/:placeId", name: "Poi#show" },
            ];
            var bundle = prometheus_1.default({ routes: routes, defaultPath: "test/" });
            expect(setDefaultLabelsMock).toHaveBeenCalledWith({ direction: "inbound" });
            expect(collectDefaultMetricsMock).toHaveBeenCalledTimes(1);
            expect(promBundle.normalizePath({ url: url })).toBe("Poi#show");
            expect(promBundleMock.mock.calls[0]).toMatchSnapshot();
        });
    });
});
