export declare const styleLoaders: {
    css: {
        loader: string;
        options: {
            namedExport: boolean;
            modules: boolean;
            minimize: boolean;
            localIdentName: string;
            context: string;
        };
    };
    postcss: {
        loader: string;
        options: {
            plugins: () => any[];
        };
    };
};
export declare const tsLoader: {
    exclude: RegExp;
    test: RegExp;
    use: {
        loader: string;
        options: {
            configFile: string;
        };
    }[];
};
export declare const cssLoader: {
    test: RegExp;
    exclude: RegExp;
    use: (string | {
        loader: string;
        options: {
            namedExport: boolean;
            modules: boolean;
            minimize: boolean;
            localIdentName: string;
            context: string;
        };
    } | {
        loader: string;
        options: {
            plugins: () => any[];
        };
    })[];
};
export declare const cssLoaderVendor: {
    test: RegExp;
    include: RegExp;
    use: string[];
};
export declare const extractCssLoader: {
    test: RegExp;
    include: RegExp;
    loader: any;
};
export declare const extractCssLoaderVendor: {
    test: RegExp;
    include: RegExp;
    loader: any;
};
export declare const getLoaders: (env: "dev" | "prod") => ({
    exclude: RegExp;
    test: RegExp;
    use: {
        loader: string;
        options: {
            configFile: string;
        };
    }[];
} | {
    test: RegExp;
    exclude: RegExp;
    use: (string | {
        loader: string;
        options: {
            namedExport: boolean;
            modules: boolean;
            minimize: boolean;
            localIdentName: string;
            context: string;
        };
    } | {
        loader: string;
        options: {
            plugins: () => any[];
        };
    })[];
} | {
    test: RegExp;
    include: RegExp;
    use: string[];
})[] | ({
    exclude: RegExp;
    test: RegExp;
    use: {
        loader: string;
        options: {
            configFile: string;
        };
    }[];
} | {
    test: RegExp;
    include: RegExp;
    loader: any;
})[];
