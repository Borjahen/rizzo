"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
Object.defineProperty(exports, "__esModule", { value: true });
/** @flow */
var path = require("path");
var inversify_1 = require("inversify");
var getFilePaths_1 = require("../utils/getFilePaths");
var types_1 = require("../types");
var ControllerRegistry = /** @class */ (function () {
    function ControllerRegistry(require, cwd, isProdEnv) {
        this.require = require;
        this.controllers = [];
        this.cwd = cwd;
        this.isProdEnv = isProdEnv;
    }
    ControllerRegistry.prototype.register = function () {
        var _this = this;
        var controllerPath = path.join(this.cwd);
        var baseDir = this.isProdEnv ? "dist" : "app";
        var controllers = getFilePaths_1.default(baseDir + "/modules/**/*controller*(.js|.ts)");
        controllers.forEach(function (controller) {
            var Controller = _this.require(controllerPath + "/" + controller).default;
            _this.controllers.push(Controller);
        });
        return this.controllers;
    };
    ControllerRegistry = __decorate([
        inversify_1.injectable(),
        __param(0, inversify_1.inject("IRequireConstructor")),
        __param(1, inversify_1.inject(types_1.default.ICwd)),
        __param(2, inversify_1.inject(types_1.default.IIsProdEnv)),
        __metadata("design:paramtypes", [Object, String, Boolean])
    ], ControllerRegistry);
    return ControllerRegistry;
}());
exports.default = ControllerRegistry;
