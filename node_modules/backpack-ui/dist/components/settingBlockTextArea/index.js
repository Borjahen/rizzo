"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require("babel-runtime/helpers/extends");

var _extends3 = _interopRequireDefault(_extends2);

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _settingBlock = require("../settingBlock");

var _settingBlock2 = _interopRequireDefault(_settingBlock);

var _textarea = require("../form/textarea");

var _textarea2 = _interopRequireDefault(_textarea);

var _heightExpander = require("../form/heightExpander");

var _heightExpander2 = _interopRequireDefault(_heightExpander);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SettingBlockTextArea = function SettingBlockTextArea(props) {
  var _onChange = props.onChange,
      onFocus = props.onFocus;


  return _react2.default.createElement(
    _settingBlock2.default,
    {
      error: props.error,
      title: props.title,
      subtitle: props.subtitle,
      htmlFor: props.id
    },
    _react2.default.createElement(
      _heightExpander2.default,
      { idToFind: props.id, baseHeight: "0px" },
      function (expandHeight, newHeight) {
        return _react2.default.createElement(_textarea2.default, (0, _extends3.default)({}, props, {
          onFocus: onFocus,
          id: props.id,
          onChange: function onChange(e) {
            expandHeight(e);
            if (typeof _onChange === "function") {
              _onChange(e);
            }
          },
          name: props.name,
          placeholder: props.placeholder,
          theme: "float",
          customStyles: {
            minHeight: "56px",
            height: newHeight
          },
          rows: null
        }));
      }
    )
  );
};

SettingBlockTextArea.propTypes = {
  id: _propTypes2.default.string.isRequired,
  title: _propTypes2.default.string.isRequired,
  name: _propTypes2.default.string.isRequired,
  placeholder: _propTypes2.default.string,
  subtitle: _propTypes2.default.string,
  error: _propTypes2.default.bool,
  onChange: _propTypes2.default.func,
  onFocus: _propTypes2.default.func
};

exports.default = SettingBlockTextArea;