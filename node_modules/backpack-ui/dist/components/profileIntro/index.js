"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _getPrototypeOf = require("babel-runtime/core-js/object/get-prototype-of");

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require("babel-runtime/helpers/classCallCheck");

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require("babel-runtime/helpers/createClass");

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require("babel-runtime/helpers/possibleConstructorReturn");

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require("babel-runtime/helpers/inherits");

var _inherits3 = _interopRequireDefault(_inherits2);

var _class, _temp;

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

var _propTypes = require("prop-types");

var _propTypes2 = _interopRequireDefault(_propTypes);

var _radium = require("radium");

var _radium2 = _interopRequireDefault(_radium);

var _markdownReactJs = require("markdown-react-js");

var _markdownReactJs2 = _interopRequireDefault(_markdownReactJs);

var _reactMeasure = require("react-measure");

var _reactMeasure2 = _interopRequireDefault(_reactMeasure);

var _classnames = require("classnames");

var _classnames2 = _interopRequireDefault(_classnames);

var _moreLink = require("../moreLink");

var _moreLink2 = _interopRequireDefault(_moreLink);

var _colors = require("../../styles/colors");

var _colors2 = _interopRequireDefault(_colors);

var _typography = require("../../styles/typography");

var _color = require("../../utils/color");

var _propTypes3 = require("../../utils/propTypes");

var _propTypes4 = _interopRequireDefault(_propTypes3);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ProfileHeaderIntro = (_temp = _class = function (_React$Component) {
  (0, _inherits3.default)(ProfileHeaderIntro, _React$Component);

  function ProfileHeaderIntro(props) {
    (0, _classCallCheck3.default)(this, ProfileHeaderIntro);

    var _this = (0, _possibleConstructorReturn3.default)(this, (ProfileHeaderIntro.__proto__ || (0, _getPrototypeOf2.default)(ProfileHeaderIntro)).call(this, props));

    _this.state = {
      expanded: false,
      maxHeight: props.lineHeight * props.maxLines,
      dimensions: {
        height: -1
      }
    };

    _this.toggleExpandedState = _this.toggleExpandedState.bind(_this);
    return _this;
  }

  (0, _createClass3.default)(ProfileHeaderIntro, [{
    key: "toggleExpandedState",
    value: function toggleExpandedState() {
      this.setState({
        expanded: !this.state.expanded
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;

      var _props = this.props,
          children = _props.children,
          maxLines = _props.maxLines,
          fontSize = _props.fontSize,
          lineHeight = _props.lineHeight,
          style = _props.style;
      var _state = this.state,
          expanded = _state.expanded,
          maxHeight = _state.maxHeight,
          dimensions = _state.dimensions;


      var dangerousStyles = "\n      .ProfileHeaderIntro .ClampedText img,\n      .ProfileHeaderIntro .ClampedText video,\n      .ProfileHeaderIntro .ClampedText iframe {\n        display: none !important;\n      }\n\n      .ProfileHeaderIntro .ClampedText:not(.expanded) {\n        display: block;\n        display: -webkit-box;\n        height: calc(1em * " + lineHeight / fontSize + " * " + maxLines + ");\n        line-height: " + lineHeight / fontSize + ";\n        overflow: hidden;\n        padding: 0;\n        position: relative;\n        text-overflow: ellipsis;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: " + maxLines + ";\n      }\n\n      .ProfileHeaderIntro .ClampedText:not(.expanded)::after {\n        background: linear-gradient(to right, " + (0, _color.rgba)(_colors2.default.bgPrimary, 0) + ", " + (0, _color.rgba)(_colors2.default.bgPrimary, 1) + " 75%);\n        bottom: 0;\n        content: \"\u2026\";\n        display: block;\n        height: calc(1em * " + lineHeight / fontSize + ");\n        position: absolute;\n        right: 0;\n        text-align: right;\n        width: 10%;\n      }\n\n      @supports (-webkit-line-clamp: " + maxLines + ") {\n        .ProfileHeaderIntro .ClampedText:not(.expanded)::after {\n          display: none !important;\n        }\n      }\n    ";

      return _react2.default.createElement(
        _reactMeasure2.default,
        {
          bounds: true,
          onResize: function onResize(contentRect) {
            _this2.setState({
              dimensions: contentRect.bounds
            });
          }
        },
        function (_ref) {
          var measureRef = _ref.measureRef;
          return _react2.default.createElement(
            "div",
            {
              className: "ProfileHeaderIntro",
              style: [{
                fontSize: fontSize + "px",
                lineHeight: lineHeight / fontSize
              }, style]
            },
            _react2.default.createElement("style", {
              dangerouslySetInnerHTML: ProfileHeaderIntro.markup(dangerousStyles)
            }),
            _react2.default.createElement(
              "div",
              {
                className: (0, _classnames2.default)("ClampedText", expanded && "expanded"),
                ref: function ref(node) {
                  _this2.clampedText = node;
                }
              },
              _react2.default.createElement(
                "article",
                null,
                _react2.default.createElement(
                  "div",
                  {
                    className: "MarkdownContainer",
                    ref: measureRef
                  },
                  _react2.default.createElement(_markdownReactJs2.default, {
                    className: "MarkdownRender",
                    text: children
                  })
                )
              )
            ),
            dimensions.height > maxHeight && _react2.default.createElement(
              _moreLink2.default,
              {
                caps: true,
                size: "small",
                hideIcon: true,
                onClick: _this2.toggleExpandedState
              },
              expanded ? "Read less" : "Read more"
            )
          );
        }
      );
    }
  }]);
  return ProfileHeaderIntro;
}(_react2.default.Component), _class.markup = function (htmlContent) {
  return { __html: htmlContent };
}, _temp);


ProfileHeaderIntro.propTypes = {
  children: _propTypes2.default.node.isRequired,
  maxLines: _propTypes2.default.number,
  fontSize: _propTypes2.default.number,
  lineHeight: _propTypes2.default.number,
  style: _propTypes4.default.style
};

ProfileHeaderIntro.defaultProps = {
  maxLines: 3,
  fontSize: _typography.fontSizeBodySmall + "px",
  lineHeight: 24,
  style: null
};

exports.default = (0, _radium2.default)(ProfileHeaderIntro);